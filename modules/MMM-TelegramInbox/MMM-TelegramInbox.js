/* global Module, Log */

Module.register("MMM-TelegramInbox", {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    defaults: {
        jsonPath: "/home/anton/MagicMirror/modules/MMM-TelegramInbox/inbox.json",
        pollInterval: 10000,   // 10 —Å–µ–∫—É–Ω–¥
        maxItems: 3,
        maxChars: 100,
        header: "üì± Telegram"
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
    start: function() {
        Log.info("Starting module: " + this.name);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ node_helper
        this.sendSocketNotification("TELEGRAM_CONFIG", this.config);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        this.messages = [];
    },

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç node_helper
    socketNotificationReceived: function(notification, payload) {
        if (notification === "TELEGRAM_DATA") {
            this.messages = payload || [];
            this.updateDom();
        }
    },

    // –°–æ–∑–¥–∞–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–∞
    getDom: function() {
        const wrapper = document.createElement("div");
        wrapper.className = "telegram-container";

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        if (this.config.header) {
            const header = document.createElement("div");
            header.className = "telegram-header";
            header.innerHTML = this.config.header;
            wrapper.appendChild(header);
        }

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        const messagesContainer = document.createElement("div");
        messagesContainer.className = "telegram-messages";

        if (this.messages.length === 0) {
            // –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
            const noMessages = document.createElement("div");
            noMessages.className = "telegram-no-messages";
            noMessages.innerHTML = "–ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π";
            messagesContainer.appendChild(noMessages);
        } else {
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            const messagesToShow = this.messages.slice(0, this.config.maxItems);
            
            messagesToShow.forEach((message) => {
                const messageElement = document.createElement("div");
                messageElement.className = "telegram-message";
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ò–º—è ‚Äî —Ç–µ–∫—Å—Ç"
                let messageText = `<strong class="telegram-sender">${message.from}</strong> ‚Äî `;
                
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                let text = message.text || "";
                text = text.replace(/\s+/g, " ").trim(); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
                
                if (text.length > this.config.maxChars) {
                    text = text.substring(0, this.config.maxChars) + "‚Ä¶";
                }
                
                messageText += `<span class="telegram-text">${text}</span>`;
                
                messageElement.innerHTML = messageText;
                messagesContainer.appendChild(messageElement);
            });
        }

        wrapper.appendChild(messagesContainer);
        return wrapper;
    },

    // –°—Ç–∏–ª–∏ –º–æ–¥—É–ª—è
    getStyles: function() {
        return ["MMM-TelegramInbox.css"];
    }
});
